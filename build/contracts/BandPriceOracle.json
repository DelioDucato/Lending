{
  "contractName": "BandPriceOracle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IStdReference",
          "name": "_ref",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenToPair",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "string[2]",
          "name": "_pair",
          "type": "string[2]"
        }
      ],
      "name": "setTokenPairMap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getAssetPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IStdReference\",\"name\":\"_ref\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"string[2]\",\"name\":\"_pair\",\"type\":\"string[2]\"}],\"name\":\"setTokenPairMap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenToPair\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alpha\",\"details\":\"Exposes a method to set the Band oracle request packet corresponding to a ERC20 asset address as well as a method to query the latest price of an asset from Band's bridge\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes a new BandPriceOracle instance.\",\"params\":{\"_ref\":\"Band's StdReference contract*\"}},\"getAssetPrice(address)\":{\"details\":\"The function uses `tokenToPair` to get the symbol string pair associated with the input `_asset`` It then uses that the pair string as a parameter to Band's StdReference contract's `getReferenceData` method to get * the latest price of the asset.\",\"params\":{\"_asset\":\"The asset address*\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setTokenPairMap(address,string[2])\":{\"params\":{\"_asset\":\"The token address the asset\",\"_pair\":\"The symbol pair associated with _asset*\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"BandPriceOracle contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":\"Contract constructor\",\"getAssetPrice(address)\":{\"notice\":\"Returns the latest price of an asset given the asset's address\"},\"setTokenPairMap(address,string[2])\":{\"notice\":\"Sets the mapping between an asset address and the corresponding Band's Bridge RequestPacket struct\"},\"tokenToPair(address,uint256)\":{\"notice\":\"Mapping between asset address and token pair strings*\"}},\"notice\":\"Implements the actions of the BandPriceOracle\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Lending-Development/Lending/contracts/BandPriceOracle.sol\":\"BandPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Lending-Development/Lending/contracts/BandPriceOracle.sol\":{\"keccak256\":\"0x7a0c69a11619d83c3c9abf1862aedf0e6dfdeab366e17d70c0f5f4ff1d3f45fd\",\"urls\":[\"bzz-raw://cbcce78bdb2eec6e47f1b387fb3e9be85f18835bd7cc2f778a4ae5f7d85cd09c\",\"dweb:/ipfs/QmRiYqQAykyh3a9Qwjtoq6Wu74SbQTsjXbiPfHtdcLDvke\"]},\"/D/Lending-Development/Lending/contracts/interfaces/IPriceOracle.sol\":{\"keccak256\":\"0xe2a37da3bedf70e40b82c9c4283611dfee3ec769bc9bbe6bc075e9a83b3a68c2\",\"urls\":[\"bzz-raw://4669421cc28fcffa1414c517189c29df9fac9b8574be2e2199e13388fb655272\",\"dweb:/ipfs/QmVqwNAfNWBgEtqhhxCA9zZW1xXaS9j7LKcuHW8oSCUAC7\"]},\"/D/Lending-Development/Lending/contracts/interfaces/IStdReference.sol\":{\"keccak256\":\"0x7b0abeb472705c62bf1103adbf1681a27920188019b6a495eb67d4a80d5a27e4\",\"urls\":[\"bzz-raw://f3ff7d800cb367e57fb382d43eb9067ef771bac3dacc19ea57f75024ae6c628b\",\"dweb:/ipfs/QmQgQrbMza1wcFsWqf3v2AXmwgoZ5QERkpUPRtvYwWyCcu\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0xd9e1cdbea4cf7c51ac26f5782db0fb3d78c1b37e090547e83aef497a727a18f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5017e004334d7579774232e18f739ee9eb39438d03c49a9451a35e315c28761b\",\"dweb:/ipfs/QmNb8Q8C6WLgtWqCE7iL5T1UN52Q6QsE7ZtVc6ppcvViXe\"]},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"keccak256\":\"0xfda4b2282bd5da7f616c243c4f42dc16366fe2ecbf2652ad1135fc7c0772912f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f67fb6a8c59032e90d6a4eeb5615cdab400ec5e3f321be86484b6c041813699\",\"dweb:/ipfs/QmccGJMHuwEW6DcqnaPPSr9uAb1NV2hjvATj9RnMwkAdTb\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a6f380380610a6f83398101604081905261002f916100b5565b60006100426001600160e01b036100b116565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03929092169190911790556100e3565b3390565b6000602082840312156100c6578081fd5b81516001600160a01b03811681146100dc578182fd5b9392505050565b61097d806100f26000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631ec7b34e1461006757806331f1b2cd14610090578063715018a6146100a55780638da5cb5b146100ad578063b3596f07146100c2578063f2fde38b146100e2575b600080fd5b61007a610075366004610765565b6100f5565b604051610087919061082b565b60405180910390f35b6100a361009e36600461069a565b61019e565b005b6100a3610207565b6100b5610286565b6040516100879190610817565b6100d56100d0366004610678565b610296565b60405161008791906108e7565b6100a36100f0366004610678565b61040b565b6002602052816000526040600020816002811061010e57fe5b01805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294509192508301828280156101965780601f1061016b57610100808354040283529160200191610196565b820191906000526020600020905b81548152906001019060200180831161017957829003601f168201915b505050505081565b6101a66104c1565b6000546001600160a01b039081169116146101dc5760405162461bcd60e51b81526004016101d3906108b2565b60405180910390fd5b6001600160a01b03821660009081526002602081905260409091206102029183906104c5565b505050565b61020f6104c1565b6000546001600160a01b0390811691161461023c5760405162461bcd60e51b81526004016101d3906108b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b60006102a0610515565b6001600160a01b038316600090815260026020819052604080832081518083019092529092909190835b8282101561036d57838201805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b5050505050815260200190600101906102ca565b50505050905061037b61053c565b6001548251602084015160405163195556f360e21b81526001600160a01b03909316926365555bcc926103b292909160040161083e565b60606040518083038186803b1580156103ca57600080fd5b505afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610402919061078f565b51949350505050565b6104136104c1565b6000546001600160a01b039081169116146104405760405162461bcd60e51b81526004016101d3906108b2565b6001600160a01b0381166104665760405162461bcd60e51b81526004016101d39061086c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b8260028101928215610505579160200282015b8281111561050557825180516104f591849160209091019061055d565b50916020019190600101906104d8565b506105119291506105d7565b5090565b60405180604001604052806002905b60608152602001906001900390816105245790505090565b60405180606001604052806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061059e57805160ff19168380011785556105cb565b828001600101855582156105cb579182015b828111156105cb5782518255916020019190600101906105b0565b506105119291506105fa565b61029391905b808211156105115760006105f18282610614565b506001016105dd565b61029391905b808211156105115760008155600101610600565b50805460018160011615610100020316600290046000825580601f1061063a5750610658565b601f01602090049060005260206000209081019061065891906105fa565b50565b80356001600160a01b038116811461067257600080fd5b92915050565b600060208284031215610689578081fd5b610693838361065b565b9392505050565b600080604083850312156106ac578081fd5b6106b6848461065b565b915060208084013567ffffffffffffffff8111156106d2578283fd5b601f90850181810187136106e4578384fd5b6106ee60406108f0565b8082865b600281101561075557813585018b8782011261070c578889fd5b803561071f61071a82610917565b6108f0565b8181528d8a838501011115610732578a8bfd5b610741828b83018c860161093b565b8652505092860192908601906001016106f2565b5096999098509650505050505050565b60008060408385031215610777578182fd5b610781848461065b565b946020939093013593505050565b6000606082840312156107a0578081fd5b6107aa60606108f0565b8251815260208301516020820152604083015160408201528091505092915050565b60008151808452815b818110156107f1576020818501810151868301820152016107d5565b818111156108025782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006020825261069360208301846107cc565b60006040825261085160408301856107cc565b828103602084015261086381856107cc565b95945050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561090f57600080fd5b604052919050565b600067ffffffffffffffff82111561092d578081fd5b50601f01601f191660200190565b8281833750600091015256fea2646970667358221220797814d1922c6ccd91af92288aa798bce7aff95e4500f13ed6f04e93006ff53264736f6c634300060b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80631ec7b34e1461006757806331f1b2cd14610090578063715018a6146100a55780638da5cb5b146100ad578063b3596f07146100c2578063f2fde38b146100e2575b600080fd5b61007a610075366004610765565b6100f5565b604051610087919061082b565b60405180910390f35b6100a361009e36600461069a565b61019e565b005b6100a3610207565b6100b5610286565b6040516100879190610817565b6100d56100d0366004610678565b610296565b60405161008791906108e7565b6100a36100f0366004610678565b61040b565b6002602052816000526040600020816002811061010e57fe5b01805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815294509192508301828280156101965780601f1061016b57610100808354040283529160200191610196565b820191906000526020600020905b81548152906001019060200180831161017957829003601f168201915b505050505081565b6101a66104c1565b6000546001600160a01b039081169116146101dc5760405162461bcd60e51b81526004016101d3906108b2565b60405180910390fd5b6001600160a01b03821660009081526002602081905260409091206102029183906104c5565b505050565b61020f6104c1565b6000546001600160a01b0390811691161461023c5760405162461bcd60e51b81526004016101d3906108b2565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b03165b90565b60006102a0610515565b6001600160a01b038316600090815260026020819052604080832081518083019092529092909190835b8282101561036d57838201805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103595780601f1061032e57610100808354040283529160200191610359565b820191906000526020600020905b81548152906001019060200180831161033c57829003601f168201915b5050505050815260200190600101906102ca565b50505050905061037b61053c565b6001548251602084015160405163195556f360e21b81526001600160a01b03909316926365555bcc926103b292909160040161083e565b60606040518083038186803b1580156103ca57600080fd5b505afa1580156103de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610402919061078f565b51949350505050565b6104136104c1565b6000546001600160a01b039081169116146104405760405162461bcd60e51b81526004016101d3906108b2565b6001600160a01b0381166104665760405162461bcd60e51b81526004016101d39061086c565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b8260028101928215610505579160200282015b8281111561050557825180516104f591849160209091019061055d565b50916020019190600101906104d8565b506105119291506105d7565b5090565b60405180604001604052806002905b60608152602001906001900390816105245790505090565b60405180606001604052806000815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061059e57805160ff19168380011785556105cb565b828001600101855582156105cb579182015b828111156105cb5782518255916020019190600101906105b0565b506105119291506105fa565b61029391905b808211156105115760006105f18282610614565b506001016105dd565b61029391905b808211156105115760008155600101610600565b50805460018160011615610100020316600290046000825580601f1061063a5750610658565b601f01602090049060005260206000209081019061065891906105fa565b50565b80356001600160a01b038116811461067257600080fd5b92915050565b600060208284031215610689578081fd5b610693838361065b565b9392505050565b600080604083850312156106ac578081fd5b6106b6848461065b565b915060208084013567ffffffffffffffff8111156106d2578283fd5b601f90850181810187136106e4578384fd5b6106ee60406108f0565b8082865b600281101561075557813585018b8782011261070c578889fd5b803561071f61071a82610917565b6108f0565b8181528d8a838501011115610732578a8bfd5b610741828b83018c860161093b565b8652505092860192908601906001016106f2565b5096999098509650505050505050565b60008060408385031215610777578182fd5b610781848461065b565b946020939093013593505050565b6000606082840312156107a0578081fd5b6107aa60606108f0565b8251815260208301516020820152604083015160408201528091505092915050565b60008151808452815b818110156107f1576020818501810151868301820152016107d5565b818111156108025782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006020825261069360208301846107cc565b60006040825261085160408301856107cc565b828103602084015261086381856107cc565b95945050505050565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60405181810167ffffffffffffffff8111828210171561090f57600080fd5b604052919050565b600067ffffffffffffffff82111561092d578081fd5b50601f01601f191660200190565b8281833750600091015256fea2646970667358221220797814d1922c6ccd91af92288aa798bce7aff95e4500f13ed6f04e93006ff53264736f6c634300060b0033",
  "immutableReferences": {},
  "sourceMap": "575:1502:2:-:0;;;1002:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;892:17:27;912:12;-1:-1:-1;;;;;912:10:27;:12;:::i;:::-;935:6;:18;;-1:-1:-1;;;;;;935:18:27;-1:-1:-1;;;;;935:18:27;;;;;;;969:43;;935:18;;-1:-1:-1;935:18:27;969:43;;935:6;;969:43;-1:-1:-1;1048:3:2;:10;;-1:-1:-1;;;;;;1048:10:2;-1:-1:-1;;;;;1048:10:2;;;;;;;;;;575:1502;;605:106:26;693:10;605:106;:::o;190:307:-1:-;;327:2;315:9;306:7;302:23;298:32;295:2;;;-1:-1;;333:12;295:2;105:13;;-1:-1;;;;;784:54;;931:57;;921:2;;-1:-1;;992:12;921:2;385:96;289:208;-1:-1;;;289:208::o;:::-;575:1502:2;;;;;;",
  "deployedSourceMap": "575:1502:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:48;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1304:122;;;;;;:::i;:::-;;:::i;:::-;;1743:148:27;;;:::i;1101:79::-;;;:::i;:::-;;;;;;;:::i;1826:248:2:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2046:244:27:-;;;;;;:::i;:::-;;:::i;795:48:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;795:48:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;795:48:2;;-1:-1:-1;795:48:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1304:122::-;1323:12:27;:10;:12::i;:::-;1313:6;;-1:-1:-1;;;;;1313:6:27;;;:22;;;1305:67;;;;-1:-1:-1;;;1305:67:27;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1393:19:2;::::1;;::::0;;;:11:::1;:19;::::0;;;;;;;:27:::1;::::0;1415:5;;1393:27:::1;:::i;:::-;;1304:122:::0;;:::o;1743:148:27:-;1323:12;:10;:12::i;:::-;1313:6;;-1:-1:-1;;;;;1313:6:27;;;:22;;;1305:67;;;;-1:-1:-1;;;1305:67:27;;;;;;;:::i;:::-;1850:1:::1;1834:6:::0;;1813:40:::1;::::0;-1:-1:-1;;;;;1834:6:27;;::::1;::::0;1813:40:::1;::::0;1850:1;;1813:40:::1;1881:1;1864:19:::0;;-1:-1:-1;;;;;;1864:19:27::1;::::0;;1743:148::o;1101:79::-;1139:7;1166:6;-1:-1:-1;;;;;1166:6:27;1101:79;;:::o;1826:248:2:-;1897:7;1913:21;;:::i;:::-;-1:-1:-1;;;;;1937:19:2;;;;;;:11;:19;;;;;;;;1913:43;;;;;;;;;;1937:19;;:11;1913:43;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1913:43:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:39;;:::i;:::-;2007:3;;2028:7;;;2037;;;2007:38;;-1:-1:-1;;;2007:38:2;;-1:-1:-1;;;;;2007:3:2;;;;:20;;:38;;2028:7;;2007:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2059:9;;1826:248;-1:-1:-1;;;;1826:248:2:o;2046:244:27:-;1323:12;:10;:12::i;:::-;1313:6;;-1:-1:-1;;;;;1313:6:27;;;:22;;;1305:67;;;;-1:-1:-1;;;1305:67:27;;;;;;;:::i;:::-;-1:-1:-1;;;;;2135:22:27;::::1;2127:73;;;;-1:-1:-1::0;;;2127:73:27::1;;;;;;;:::i;:::-;2237:6;::::0;;2216:38:::1;::::0;-1:-1:-1;;;;;2216:38:27;;::::1;::::0;2237:6;::::1;::::0;2216:38:::1;::::0;::::1;2265:6;:17:::0;;-1:-1:-1;;;;;;2265:17:27::1;-1:-1:-1::0;;;;;2265:17:27;;;::::1;::::0;;;::::1;::::0;;2046:244::o;605:106:26:-;693:10;605:106;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;5:130::-;72:20;;-1:-1;;;;;8494:54;;9234:35;;9224:2;;9283:1;;9273:12;9224:2;57:78;;;;:::o;2246:241::-;;2350:2;2338:9;2329:7;2325:23;2321:32;2318:2;;;-1:-1;;2356:12;2318:2;2418:53;2463:7;2439:22;2418:53;:::i;:::-;2408:63;2312:175;-1:-1;;;2312:175::o;2494:518::-;;;2648:2;2636:9;2627:7;2623:23;2619:32;2616:2;;;-1:-1;;2654:12;2616:2;2716:53;2761:7;2737:22;2716:53;:::i;:::-;2706:63;;2834:2;;2823:9;2819:18;2806:32;2858:18;2850:6;2847:30;2844:2;;;-1:-1;;2880:12;2844:2;278:4;;2964:22;;266:17;;;262:27;-1:-1;252:2;;-1:-1;;293:12;252:2;346:88;2648:2;346:88;:::i;:::-;440:16;499:17;-1:-1;528:243;327:4;550:1;547:13;528:243;;;636:3;623:17;615:6;611:30;888:3;278:4;873:6;869:17;865:27;855:2;;-1:-1;;896:12;855:2;943:6;930:20;965:65;980:49;1022:6;980:49;:::i;:::-;965:65;:::i;:::-;1050:6;1043:5;1036:21;1154:3;2834:2;1145:6;1078;1136:16;;1133:25;1130:2;;;-1:-1;;1161:12;1130:2;1181:41;1215:6;2834:2;1112:5;1108:16;2834:2;1078:6;1074:17;1181:41;:::i;:::-;648:60;;-1:-1;;722:14;;;;750;;;;575:1;568:9;528:243;;;-1:-1;2610:402;;2900:96;;-1:-1;2610:402;-1:-1;;;;;;;2610:402::o;3019:366::-;;;3140:2;3128:9;3119:7;3115:23;3111:32;3108:2;;;-1:-1;;3146:12;3108:2;3208:53;3253:7;3229:22;3208:53;:::i;:::-;3198:63;3298:2;3337:22;;;;2035:20;;-1:-1;;;3102:283::o;3392:325::-;;3538:2;3526:9;3517:7;3513:23;3509:32;3506:2;;;-1:-1;;3544:12;3506:2;1444:20;3538:2;1444:20;:::i;:::-;1578:22;2183:13;1528:16;1521:86;1679:2;1748:9;1744:22;2183:13;1679:2;1698:5;1694:16;1687:86;1846:2;1915:9;1911:22;2183:13;1846:2;1865:5;1861:16;1854:86;3596:105;;;;3500:217;;;;:::o;3844:347::-;;3989:5;8121:12;8278:6;8273:3;8266:19;-1:-1;8866:101;8880:6;8877:1;8874:13;8866:101;;;8315:4;8947:11;;;;;8941:18;8928:11;;;;;8921:39;8895:10;8866:101;;;8982:6;8979:1;8976:13;8973:2;;;-1:-1;8315:4;9038:6;8310:3;9029:16;;9022:27;8973:2;-1:-1;9154:7;9138:14;-1:-1;;9134:28;4147:39;;;;8315:4;4147:39;;3936:255;-1:-1;;3936:255::o;5043:222::-;-1:-1;;;;;8494:54;;;;3795:37;;5170:2;5155:18;;5141:124::o;5272:310::-;;5419:2;5440:17;5433:47;5494:78;5419:2;5408:9;5404:18;5558:6;5494:78;:::i;5589:509::-;;5784:2;5805:17;5798:47;5859:78;5784:2;5773:9;5769:18;5923:6;5859:78;:::i;:::-;5985:9;5979:4;5975:20;5970:2;5959:9;5955:18;5948:48;6010:78;6083:4;6074:6;6010:78;:::i;:::-;6002:86;5755:343;-1:-1;;;;;5755:343::o;6105:416::-;6305:2;6319:47;;;4423:2;6290:18;;;8266:19;4459:34;8306:14;;;4439:55;-1:-1;;;4514:12;;;4507:30;4556:12;;;6276:245::o;6528:416::-;6728:2;6742:47;;;6713:18;;;8266:19;4843:34;8306:14;;;4823:55;4897:12;;;6699:245::o;6951:222::-;4994:37;;;7078:2;7063:18;;7049:124::o;7180:256::-;7242:2;7236:9;7268:17;;;7343:18;7328:34;;7364:22;;;7325:62;7322:2;;;7400:1;;7390:12;7322:2;7242;7409:22;7220:216;;-1:-1;7220:216::o;7704:322::-;;7848:18;7840:6;7837:30;7834:2;;;-1:-1;;7870:12;7834:2;-1:-1;9154:7;7924:17;-1:-1;;7920:33;8011:4;8001:15;;7771:255::o;8640:145::-;8721:6;8716:3;8711;8698:30;-1:-1;8777:1;8759:16;;8752:27;8691:94::o",
  "source": "pragma solidity >=0.6.11;\r\npragma experimental ABIEncoderV2;\r\n\r\nimport {IPriceOracle} from \"./interfaces/IPriceOracle.sol\";\r\nimport {IStdReference} from \"./interfaces/IStdReference.sol\";\r\nimport {Ownable} from \"openzeppelin-solidity/contracts/access/Ownable.sol\";\r\n\r\n/**\r\n * @title BandPriceOracle contract\r\n * @notice Implements the actions of the BandPriceOracle\r\n * @dev Exposes a method to set the Band oracle request packet corresponding to a ERC20 asset address\r\n * as well as a method to query the latest price of an asset from Band's bridge\r\n * @author Alpha\r\n */\r\n\r\ncontract BandPriceOracle is IPriceOracle, Ownable {\r\n  /**\r\n  @notice BandChain's BridgeWithCache interface\r\n  **/\r\n  IStdReference ref;\r\n\r\n  /**\r\n  @notice Mapping between asset address and token pair strings\r\n  **/\r\n  mapping(address => string[2]) public tokenToPair;\r\n\r\n  /**\r\n   * @notice Contract constructor\r\n   * @dev Initializes a new BandPriceOracle instance.\r\n   * @param _ref Band's StdReference contract\r\n   **/\r\n  constructor(IStdReference _ref) public {\r\n    ref = _ref;\r\n  }\r\n\r\n  /**\r\n   * @notice Sets the mapping between an asset address and the corresponding Band's Bridge RequestPacket struct\r\n   * @param _asset The token address the asset\r\n   * @param _pair The symbol pair associated with _asset\r\n   **/\r\n  function setTokenPairMap(address _asset, string[2] memory _pair) public onlyOwner {\r\n    tokenToPair[_asset] = _pair;\r\n  }\r\n\r\n  /**\r\n   * @notice Returns the latest price of an asset given the asset's address\r\n   * @dev The function uses `tokenToPair` to get the symbol string pair associated with the input `_asset``\r\n   * It then uses that the pair string as a parameter to Band's StdReference contract's `getReferenceData` method to get * the latest price of the asset.\r\n   * @param _asset The asset address\r\n   **/\r\n  function getAssetPrice(address _asset) external override view returns (uint256) {\r\n    string[2] memory pair = tokenToPair[_asset];\r\n\r\n    IStdReference.ReferenceData memory rate = ref.getReferenceData(pair[0], pair[1]);\r\n    return rate.rate;\r\n  }\r\n}\r\n",
  "sourcePath": "D:/Lending-Development/Lending/contracts/BandPriceOracle.sol",
  "ast": {
    "absolutePath": "/D/Lending-Development/Lending/contracts/BandPriceOracle.sol",
    "exportedSymbols": {
      "BandPriceOracle": [
        467
      ]
    },
    "id": 468,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 377,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:2"
      },
      {
        "id": 378,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:33:2"
      },
      {
        "absolutePath": "/D/Lending-Development/Lending/contracts/interfaces/IPriceOracle.sol",
        "file": "./interfaces/IPriceOracle.sol",
        "id": 380,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 5367,
        "src": "64:59:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 379,
              "name": "IPriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "72:12:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Lending-Development/Lending/contracts/interfaces/IStdReference.sol",
        "file": "./interfaces/IStdReference.sol",
        "id": 382,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 5401,
        "src": "125:61:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 381,
              "name": "IStdReference",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "133:13:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 384,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 6185,
        "src": "188:75:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 383,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "196:7:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 386,
              "name": "IPriceOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5366,
              "src": "603:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceOracle_$5366",
                "typeString": "contract IPriceOracle"
              }
            },
            "id": 387,
            "nodeType": "InheritanceSpecifier",
            "src": "603:12:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 388,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6184,
              "src": "617:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6184",
                "typeString": "contract Ownable"
              }
            },
            "id": 389,
            "nodeType": "InheritanceSpecifier",
            "src": "617:7:2"
          }
        ],
        "contractDependencies": [
          5366,
          6075,
          6184
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 385,
          "nodeType": "StructuredDocumentation",
          "src": "267:304:2",
          "text": " @title BandPriceOracle contract\n @notice Implements the actions of the BandPriceOracle\n @dev Exposes a method to set the Band oracle request packet corresponding to a ERC20 asset address\n as well as a method to query the latest price of an asset from Band's bridge\n @author Alpha"
        },
        "fullyImplemented": true,
        "id": 467,
        "linearizedBaseContracts": [
          467,
          6184,
          6075,
          5366
        ],
        "name": "BandPriceOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "630:59:2",
              "text": "@notice BandChain's BridgeWithCache interface*"
            },
            "id": 392,
            "mutability": "mutable",
            "name": "ref",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "693:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStdReference_$5400",
              "typeString": "contract IStdReference"
            },
            "typeName": {
              "contractScope": null,
              "id": 391,
              "name": "IStdReference",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5400,
              "src": "693:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStdReference_$5400",
                "typeString": "contract IStdReference"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "717:74:2",
              "text": "@notice Mapping between asset address and token pair strings*"
            },
            "functionSelector": "1ec7b34e",
            "id": 399,
            "mutability": "mutable",
            "name": "tokenToPair",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "795:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
              "typeString": "mapping(address => string[2])"
            },
            "typeName": {
              "id": 398,
              "keyType": {
                "id": 394,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "803:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "795:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
                "typeString": "mapping(address => string[2])"
              },
              "valueType": {
                "baseType": {
                  "id": 395,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "814:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 397,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "32",
                  "id": 396,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "821:1:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "ArrayTypeName",
                "src": "814:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$2_storage_ptr",
                  "typeString": "string[2]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "1041:23:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 405,
                      "name": "ref",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "1048:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStdReference_$5400",
                        "typeString": "contract IStdReference"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 406,
                      "name": "_ref",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "1054:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStdReference_$5400",
                        "typeString": "contract IStdReference"
                      }
                    },
                    "src": "1048:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStdReference_$5400",
                      "typeString": "contract IStdReference"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:10:2"
                }
              ]
            },
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "850:148:2",
              "text": " @notice Contract constructor\n @dev Initializes a new BandPriceOracle instance.\n @param _ref Band's StdReference contract*"
            },
            "id": 410,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_ref",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 410,
                  "src": "1014:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStdReference_$5400",
                    "typeString": "contract IStdReference"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 401,
                    "name": "IStdReference",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5400,
                    "src": "1014:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStdReference_$5400",
                      "typeString": "contract IStdReference"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1013:20:2"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:2"
            },
            "scope": 467,
            "src": "1002:62:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "1386:40:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 422,
                        "name": "tokenToPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "1393:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
                          "typeString": "mapping(address => string storage ref[2] storage ref)"
                        }
                      },
                      "id": 424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1405:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1393:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$2_storage",
                        "typeString": "string storage ref[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "1415:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                        "typeString": "string memory[2] memory"
                      }
                    },
                    "src": "1393:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$2_storage",
                      "typeString": "string storage ref[2] storage ref"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:27:2"
                }
              ]
            },
            "documentation": {
              "id": 411,
              "nodeType": "StructuredDocumentation",
              "src": "1070:230:2",
              "text": " @notice Sets the mapping between an asset address and the corresponding Band's Bridge RequestPacket struct\n @param _asset The token address the asset\n @param _pair The symbol pair associated with _asset*"
            },
            "functionSelector": "31f1b2cd",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 420,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 419,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6133,
                  "src": "1376:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1376:9:2"
              }
            ],
            "name": "setTokenPairMap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "1329:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "1345:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                    "typeString": "string[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 414,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1345:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 416,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1352:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1345:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$2_storage_ptr",
                      "typeString": "string[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:40:2"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:2"
            },
            "scope": 467,
            "src": "1304:122:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5365
            ],
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "1906:168:2",
              "statements": [
                {
                  "assignments": [
                    443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 443,
                      "mutability": "mutable",
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 465,
                      "src": "1913:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                        "typeString": "string[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 441,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1913:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 442,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1920:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "1913:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$2_storage_ptr",
                          "typeString": "string[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "tokenToPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "1937:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
                        "typeString": "mapping(address => string storage ref[2] storage ref)"
                      }
                    },
                    "id": 446,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "1949:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1937:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$2_storage",
                      "typeString": "string storage ref[2] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1913:43:2"
                },
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "mutability": "mutable",
                      "name": "rate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 465,
                      "src": "1965:39:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReferenceData_$5376_memory_ptr",
                        "typeString": "struct IStdReference.ReferenceData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "IStdReference.ReferenceData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5376,
                        "src": "1965:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReferenceData_$5376_storage_ptr",
                          "typeString": "struct IStdReference.ReferenceData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 454,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "2028:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                            "typeString": "string memory[2] memory"
                          }
                        },
                        "id": 456,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2033:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2028:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "2037:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                            "typeString": "string memory[2] memory"
                          }
                        },
                        "id": 459,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2042:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2037:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "ref",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "2007:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStdReference_$5400",
                          "typeString": "contract IStdReference"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReferenceData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5386,
                      "src": "2007:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_struct$_ReferenceData_$5376_memory_ptr_$",
                        "typeString": "function (string memory,string memory) view external returns (struct IStdReference.ReferenceData memory)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReferenceData_$5376_memory_ptr",
                      "typeString": "struct IStdReference.ReferenceData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1965:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 462,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "2059:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReferenceData_$5376_memory_ptr",
                        "typeString": "struct IStdReference.ReferenceData memory"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5371,
                    "src": "2059:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 437,
                  "id": 464,
                  "nodeType": "Return",
                  "src": "2052:16:2"
                }
              ]
            },
            "documentation": {
              "id": 430,
              "nodeType": "StructuredDocumentation",
              "src": "1432:390:2",
              "text": " @notice Returns the latest price of an asset given the asset's address\n @dev The function uses `tokenToPair` to get the symbol string pair associated with the input `_asset``\n It then uses that the pair string as a parameter to Band's StdReference contract's `getReferenceData` method to get * the latest price of the asset.\n @param _asset The asset address*"
            },
            "functionSelector": "b3596f07",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 434,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1874:8:2"
            },
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 466,
                  "src": "1849:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1848:16:2"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 466,
                  "src": "1897:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1896:9:2"
            },
            "scope": 467,
            "src": "1826:248:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 468,
        "src": "575:1502:2"
      }
    ],
    "src": "0:2079:2"
  },
  "legacyAST": {
    "absolutePath": "/D/Lending-Development/Lending/contracts/BandPriceOracle.sol",
    "exportedSymbols": {
      "BandPriceOracle": [
        467
      ]
    },
    "id": 468,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 377,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:2"
      },
      {
        "id": 378,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:33:2"
      },
      {
        "absolutePath": "/D/Lending-Development/Lending/contracts/interfaces/IPriceOracle.sol",
        "file": "./interfaces/IPriceOracle.sol",
        "id": 380,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 5367,
        "src": "64:59:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 379,
              "name": "IPriceOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "72:12:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Lending-Development/Lending/contracts/interfaces/IStdReference.sol",
        "file": "./interfaces/IStdReference.sol",
        "id": 382,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 5401,
        "src": "125:61:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 381,
              "name": "IStdReference",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "133:13:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
        "id": 384,
        "nodeType": "ImportDirective",
        "scope": 468,
        "sourceUnit": 6185,
        "src": "188:75:2",
        "symbolAliases": [
          {
            "foreign": {
              "argumentTypes": null,
              "id": 383,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": null,
              "src": "196:7:2",
              "typeDescriptions": {
                "typeIdentifier": null,
                "typeString": null
              }
            },
            "local": null
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 386,
              "name": "IPriceOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5366,
              "src": "603:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPriceOracle_$5366",
                "typeString": "contract IPriceOracle"
              }
            },
            "id": 387,
            "nodeType": "InheritanceSpecifier",
            "src": "603:12:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 388,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6184,
              "src": "617:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6184",
                "typeString": "contract Ownable"
              }
            },
            "id": 389,
            "nodeType": "InheritanceSpecifier",
            "src": "617:7:2"
          }
        ],
        "contractDependencies": [
          5366,
          6075,
          6184
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 385,
          "nodeType": "StructuredDocumentation",
          "src": "267:304:2",
          "text": " @title BandPriceOracle contract\n @notice Implements the actions of the BandPriceOracle\n @dev Exposes a method to set the Band oracle request packet corresponding to a ERC20 asset address\n as well as a method to query the latest price of an asset from Band's bridge\n @author Alpha"
        },
        "fullyImplemented": true,
        "id": 467,
        "linearizedBaseContracts": [
          467,
          6184,
          6075,
          5366
        ],
        "name": "BandPriceOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 390,
              "nodeType": "StructuredDocumentation",
              "src": "630:59:2",
              "text": "@notice BandChain's BridgeWithCache interface*"
            },
            "id": 392,
            "mutability": "mutable",
            "name": "ref",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "693:17:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStdReference_$5400",
              "typeString": "contract IStdReference"
            },
            "typeName": {
              "contractScope": null,
              "id": 391,
              "name": "IStdReference",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5400,
              "src": "693:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStdReference_$5400",
                "typeString": "contract IStdReference"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 393,
              "nodeType": "StructuredDocumentation",
              "src": "717:74:2",
              "text": "@notice Mapping between asset address and token pair strings*"
            },
            "functionSelector": "1ec7b34e",
            "id": 399,
            "mutability": "mutable",
            "name": "tokenToPair",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 467,
            "src": "795:48:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
              "typeString": "mapping(address => string[2])"
            },
            "typeName": {
              "id": 398,
              "keyType": {
                "id": 394,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "803:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "795:29:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
                "typeString": "mapping(address => string[2])"
              },
              "valueType": {
                "baseType": {
                  "id": 395,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "814:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "id": 397,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "32",
                  "id": 396,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "821:1:2",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "ArrayTypeName",
                "src": "814:9:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_string_storage_$2_storage_ptr",
                  "typeString": "string[2]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "1041:23:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 405,
                      "name": "ref",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 392,
                      "src": "1048:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStdReference_$5400",
                        "typeString": "contract IStdReference"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 406,
                      "name": "_ref",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 402,
                      "src": "1054:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStdReference_$5400",
                        "typeString": "contract IStdReference"
                      }
                    },
                    "src": "1048:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStdReference_$5400",
                      "typeString": "contract IStdReference"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "1048:10:2"
                }
              ]
            },
            "documentation": {
              "id": 400,
              "nodeType": "StructuredDocumentation",
              "src": "850:148:2",
              "text": " @notice Contract constructor\n @dev Initializes a new BandPriceOracle instance.\n @param _ref Band's StdReference contract*"
            },
            "id": 410,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "_ref",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 410,
                  "src": "1014:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStdReference_$5400",
                    "typeString": "contract IStdReference"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 401,
                    "name": "IStdReference",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5400,
                    "src": "1014:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStdReference_$5400",
                      "typeString": "contract IStdReference"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1013:20:2"
            },
            "returnParameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:2"
            },
            "scope": 467,
            "src": "1002:62:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 428,
              "nodeType": "Block",
              "src": "1386:40:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 422,
                        "name": "tokenToPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 399,
                        "src": "1393:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
                          "typeString": "mapping(address => string storage ref[2] storage ref)"
                        }
                      },
                      "id": 424,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "_asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 413,
                        "src": "1405:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1393:19:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$2_storage",
                        "typeString": "string storage ref[2] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "_pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 417,
                      "src": "1415:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                        "typeString": "string memory[2] memory"
                      }
                    },
                    "src": "1393:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$2_storage",
                      "typeString": "string storage ref[2] storage ref"
                    }
                  },
                  "id": 427,
                  "nodeType": "ExpressionStatement",
                  "src": "1393:27:2"
                }
              ]
            },
            "documentation": {
              "id": 411,
              "nodeType": "StructuredDocumentation",
              "src": "1070:230:2",
              "text": " @notice Sets the mapping between an asset address and the corresponding Band's Bridge RequestPacket struct\n @param _asset The token address the asset\n @param _pair The symbol pair associated with _asset*"
            },
            "functionSelector": "31f1b2cd",
            "id": 429,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 420,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 419,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6133,
                  "src": "1376:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1376:9:2"
              }
            ],
            "name": "setTokenPairMap",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 413,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "1329:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 412,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1329:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 429,
                  "src": "1345:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                    "typeString": "string[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 414,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1345:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 416,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1352:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1345:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$2_storage_ptr",
                      "typeString": "string[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1328:40:2"
            },
            "returnParameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1386:0:2"
            },
            "scope": 467,
            "src": "1304:122:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5365
            ],
            "body": {
              "id": 465,
              "nodeType": "Block",
              "src": "1906:168:2",
              "statements": [
                {
                  "assignments": [
                    443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 443,
                      "mutability": "mutable",
                      "name": "pair",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 465,
                      "src": "1913:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                        "typeString": "string[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 441,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1913:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 442,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1920:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "1913:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$2_storage_ptr",
                          "typeString": "string[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 447,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 444,
                      "name": "tokenToPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 399,
                      "src": "1937:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_string_storage_$2_storage_$",
                        "typeString": "mapping(address => string storage ref[2] storage ref)"
                      }
                    },
                    "id": 446,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 445,
                      "name": "_asset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 432,
                      "src": "1949:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1937:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$2_storage",
                      "typeString": "string storage ref[2] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1913:43:2"
                },
                {
                  "assignments": [
                    451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "mutability": "mutable",
                      "name": "rate",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 465,
                      "src": "1965:39:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReferenceData_$5376_memory_ptr",
                        "typeString": "struct IStdReference.ReferenceData"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 450,
                        "name": "IStdReference.ReferenceData",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 5376,
                        "src": "1965:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ReferenceData_$5376_storage_ptr",
                          "typeString": "struct IStdReference.ReferenceData"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 461,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 454,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "2028:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                            "typeString": "string memory[2] memory"
                          }
                        },
                        "id": 456,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2033:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2028:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 457,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 443,
                          "src": "2037:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$2_memory_ptr",
                            "typeString": "string memory[2] memory"
                          }
                        },
                        "id": 459,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2042:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2037:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "ref",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 392,
                        "src": "2007:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStdReference_$5400",
                          "typeString": "contract IStdReference"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReferenceData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5386,
                      "src": "2007:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_struct$_ReferenceData_$5376_memory_ptr_$",
                        "typeString": "function (string memory,string memory) view external returns (struct IStdReference.ReferenceData memory)"
                      }
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2007:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReferenceData_$5376_memory_ptr",
                      "typeString": "struct IStdReference.ReferenceData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1965:80:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 462,
                      "name": "rate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "2059:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ReferenceData_$5376_memory_ptr",
                        "typeString": "struct IStdReference.ReferenceData memory"
                      }
                    },
                    "id": 463,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rate",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5371,
                    "src": "2059:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 437,
                  "id": 464,
                  "nodeType": "Return",
                  "src": "2052:16:2"
                }
              ]
            },
            "documentation": {
              "id": 430,
              "nodeType": "StructuredDocumentation",
              "src": "1432:390:2",
              "text": " @notice Returns the latest price of an asset given the asset's address\n @dev The function uses `tokenToPair` to get the symbol string pair associated with the input `_asset``\n It then uses that the pair string as a parameter to Band's StdReference contract's `getReferenceData` method to get * the latest price of the asset.\n @param _asset The asset address*"
            },
            "functionSelector": "b3596f07",
            "id": 466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetPrice",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 434,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1874:8:2"
            },
            "parameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "_asset",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 466,
                  "src": "1849:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1849:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1848:16:2"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 466,
                  "src": "1897:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1896:9:2"
            },
            "scope": 467,
            "src": "1826:248:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 468,
        "src": "575:1502:2"
      }
    ],
    "src": "0:2079:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.11+commit.5ef660b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.5",
  "updatedAt": "2020-11-03T00:52:35.702Z",
  "devdoc": {
    "author": "Alpha",
    "details": "Exposes a method to set the Band oracle request packet corresponding to a ERC20 asset address as well as a method to query the latest price of an asset from Band's bridge",
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes a new BandPriceOracle instance.",
        "params": {
          "_ref": "Band's StdReference contract*"
        }
      },
      "getAssetPrice(address)": {
        "details": "The function uses `tokenToPair` to get the symbol string pair associated with the input `_asset`` It then uses that the pair string as a parameter to Band's StdReference contract's `getReferenceData` method to get * the latest price of the asset.",
        "params": {
          "_asset": "The asset address*"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setTokenPairMap(address,string[2])": {
        "params": {
          "_asset": "The token address the asset",
          "_pair": "The symbol pair associated with _asset*"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "BandPriceOracle contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": "Contract constructor",
      "getAssetPrice(address)": {
        "notice": "Returns the latest price of an asset given the asset's address"
      },
      "setTokenPairMap(address,string[2])": {
        "notice": "Sets the mapping between an asset address and the corresponding Band's Bridge RequestPacket struct"
      },
      "tokenToPair(address,uint256)": {
        "notice": "Mapping between asset address and token pair strings*"
      }
    },
    "notice": "Implements the actions of the BandPriceOracle",
    "version": 1
  }
}